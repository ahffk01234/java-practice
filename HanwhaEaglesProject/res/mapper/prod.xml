<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="prod">

<!-- 

	이 영역에 SQL에 맞는 태그를 이용하여 쿼리문을 작성한다.
	
	사용되는 기본적인 태그들...
	<select> ~~~ </select>
	<insert> ~~~ </insert>
	<update> ~~~ </update>
	<delete> ~~~ </delete>
	
	위 태그에서 사용되는 속성들
	
	1) id속성 : 해당 태그를 호출할 때 namespace와 연결하여 사용하는 이름
	
	2) parameterType 속성 : SQL문에 사용될 데이터가 들어있는 객체타입을 지정한다.
						(보통 vo클래스, 자바의 자료형이름 또는 alias명 등이 사용된다.)
	3) resultType 속성 : select 문을실행한 결과를 담을 객체타입을 지정한다.
						(보통 vo클래스, 자바의 자료형이름 또는 alias명 등이 사용된다.)
	4) resultMap 속성 : 결과 레코드 컬럼명과 VO개게의 property명이 다를 경우에 적절한 매핑을 위해 사용된다.
 -->	
	
	<resultMap type="eagles.shop.product.vo.ProdVO" id="prodMap">
		<result column="PROD_CD" property="prodCd" />
		<result column="PROD_NAME" property="prodName" />
		<result column="PROD_PRICE" property="prodPrice" />
		<result column="PROD_STOCK" property="prodStock" />
		<result column="PROD_IMG" property="prodImg" />
		<result column="PROD_CONTENT" property="prodContent" />
		<result column="LPROD_CD" property="lProdCd" />
		<result column="PROD_IMG2" property="prodImg2" />
	</resultMap>
	
	
	
	<select id="showProdRev" resultType="eagles.shop.product.vo.ProdRevVO">
	
	
		select PROD_REV_NO as prodRevCd, 
				PROD_REV_DATE as prodRevDate, 
				PROD_REV_CONTENT as prodRevContent, 
				PROD_REV_SCORE as prodRevScore, 
				MEM_ID as memId
		from PROD_REV
		where PROD_CD=#{prodCd}
						
	
	</select>
	
	
	<insert id="inputRev" parameterType="eagles.shop.product.vo.ProdRevVO">
	
	insert into PROD_REV (prod_rev_no, prod_rev_content, prod_rev_score, mem_id, prod_cd)
	values (prodrevno.nextval, #{prodRevContent}, #{prodRevScore}, #{memId}, #{prodCd})
	
	</insert>
	
	
	
	
	
	
	
	<select id="showProductAll" resultType="eagles.shop.product.vo.ProdVO">

<!-- 	
	<select id="showProductAll" resultMap="prodMap">
 -->
 	
		SELECT prod_cd as prodCd, 
				prod_name as prodName, 
				prod_price as prodPrice, 
				prod_stock as prodStock, 
				prod_img as prodImg, 
				prod_content as prodContent, 
				lprod_cd as lProdCd, 
				prod_img2 as prodImg2 
				 
		 
		FROM PROD
	
	
	</select>
	
	
	
	
	<select id="showProduct" parameterType="String" resultType="eagles.shop.product.vo.ProdVO">
	
		SELECT prod_cd as prodCd,
				prod_name as prodName,
				prod_price as prodPrice,
				prod_stock as prodStock,
				prod_img as prodImg,
				prod_content as prodContent,
				lprod_cd as lProdCd,
				prod_img2 as prodImg2
				
		
		FROM PROD 
		WHERE PROD_CD = #{prodCd}
	
	
	</select>
	
	<!-- 내역 -->
	<select id="showMypageProduct" resultType="eagles.shop.product.vo.MypageProductVO">
			  
			    select B.prod_name as prodName, B.prod_Cd as prodCd, A.mem_id as memId,
			     C.cart_dt_size as cartDtSize, C.cart_dt_num as cartDtNum, B.prod_price as prodPrice,
			     A.cart_date as cartDate, (B.prod_price * C.cart_dt_num) as numPrice
				from cart A, prod B, cart_dt C
				where C.prod_cd = B.prod_cd 
			    AND C.cart_cd = A.cart_cd
			    AND mem_id = #{memId} and A.cart_pay='1'  

	</select>
	
	<!-- 장바구니 -->
	<select id="myProductList" resultType="eagles.shop.product.vo.MypageProductVO"> 
	
		select A.prod_name as prodName, B.cart_dt_num as cartDtNum, B.cart_dt_size as cartDtSize, C.mem_id as memId,
			  (A.prod_price * B.cart_dt_num) as numPrice, A.prod_price as prodPrice, B.prod_cd as prodCd,
			   C.cart_date as cartDate, B.cart_cd as cartCd
		from prod A, cart_dt B, cart C
		where B.prod_cd = A.prod_cd AND B.cart_cd = C.cart_cd AND mem_id = #{memId} and cart_pay='0'


	</select>
	
	<update id="myProductPay" parameterType="String">
	
		update cart
		set cart_pay=1, cart_date=sysdate
		where mem_id = #{memId}
	
	</update>
	
	<delete id="myProductCancle">
		
		delete from cart_dt 
		where prod_cd = #{prodCd} and cart_cd = #{cartCd}
		
	</delete>
	
	<!-- 상품 검색
	System.out.println("startDay : " + startDay);
    System.out.println("endDay : " + endDay);
    System.out.println("searchContent : " + searchContent);
	 -->
	<select id="searchContent" parameterType="eagles.shop.product.vo.MypageProductVO" resultType="eagles.shop.product.vo.MypageProductVO">

	
		select B.prod_name as prodName, B.prod_Cd as prodCd, A.mem_id as memId,
			     C.cart_dt_size as cartDtSize, C.cart_dt_num as cartDtNum, B.prod_price as prodPrice,
			     A.cart_date as cartDate, (B.prod_price * C.cart_dt_num) as numPrice
				from cart A, prod B, cart_dt C
				where C.prod_cd = B.prod_cd 
			    AND C.cart_cd = A.cart_cd
			    AND mem_id = #{memId} and A.cart_pay='1'
			    <if test="searchContent!=null and searchContent!=''">
			    	and B.prod_name like '%' || #{searchContent} || '%'
			    </if>
			    <if test="startDay!=null and startDay!=''">
			    	and to_char(A.cart_date, 'YYYY-MM-DD') <![CDATA[>=]]> #{startDay}
			    </if>
			    <if test="endDay!=null and endDay!=''">
			    	and to_char(A.cart_date, 'YYYY-MM-DD') <![CDATA[<=]]>#{endDay}
			    </if>
			 
	
	</select>
	
	
	
</mapper>